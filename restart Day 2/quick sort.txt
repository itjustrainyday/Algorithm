#주의 : STL을 못쓰고 직접 구현을 해야하는 상황이라면, 절대 퀵 소트는 쓰지 말것

quick sort란, merge sort와 마찬가지로 재귀적으로 구현되는 알고리즘 sort 종류로,
merge sort와 다르게, 추가적인 공간이 필요하지 않다는 장점이 있다. 그리고 cashe hit rate가 높아서
속도가 빠르다는 장점이 있다.
추가적인 공간을 사용하지 않는 정렬 -> In-Place Sort
전개 과정을 보자면, 양쪽에 포인터를 잡고 하는 오른쪽으로 하나는 왼쪽으로
pivot이라는 위치의 인덱스를 잡고
while문 안에서 pivot이 있다면 그 다음꺼가 l 맨 마지막 원소가 r
l를 증가 r를 감소 하면서 arr[l]이 arr[pivot]보다 작다면 swap, arr[r] arr[pivot]보다 크다면 냅두고
l과 r의 위치와 값을 비교해서 바꾼다. 그런 다음 l과 r이 바뀌어서 교차하게 되면 pivot과 r를 swap하고
바꾼다. -> 강의 자료 꾸준히 보기
이제 나머지 sort가 되지 않는 건 재귀를 써서
base condition이 1이 될 때까지 재귀 함수를 써준다.

quick sort일 때, 가장 알아야 할 점:
시간 복잡도는 O(NlgN)인데, 
최악의 시간 복잡도 일때 O(N ^ 2)이다. 이미 정렬되어 있는 원소들의 quick sort를 한다고 하면 이해가 될것이다.
